###################################################################
#		krnlbuidcmd自动化编译配置文件 Makefile		  #
#				彭东  ＠ 2012.08.15.10.20	  #
###################################################################

ASM		= nasm
CC		= gcc
LD		= ld
DD		= dd 
RM		= rm
ASMBFLAGS	= -I $(HEADFILE_PATH) -f elf
ASMKFLAGS	= -I $(HEADFILE_PATH) -f elf64  #-mregparm=0-finline-functions-mcmodel=medium -mcmodel=large 
BTCFLAGS	= -I $(HEADFILE_PATH) -c -O2 -std=c99 -m32 -Wall -Wshadow -save-temps -W -Wconversion -Wno-sign-conversion  -fno-stack-protector -fomit-frame-pointer -fno-builtin -fno-common  -fno-ident -ffreestanding  -fno-stack-protector -fomit-frame-pointer -Wno-unused-parameter -Wunused-variable
CFLAGS	= -I $(HEADFILE_PATH) -c -O2 -m64 -std=c99 -Wall -Wshadow -W -Wconversion -Wno-sign-conversion -fno-ident -Wno-unused-parameter -Wunused-variable #-fdata-sections -gstabs+
CPPFLGSLDS	= $(HEADFILE_PATH) -E -P 
CSCFLAGS = -I $(HEADFILE_PATH) -c   -fno-builtin -fno-common -fno-stack-protector -fno-ident -ffreestanding
SCFLAGS	= -I $(HEADFILE_PATH) -S  -std=c99 -fno-ident -Wall -fno-builtin -fno-common -fno-stack-protector
LDFLAGS		= -s -static -T boot.lds -n  -Map boot.map --oformat binary
FDLDRLDFLG	= -s -Ttext 0 -n  -Map fdldr.map --oformat binary
LOADERLDFLAGS	= -s -T ldrld.lds -n  -Map hdldr.map  --oformat binary

KERNELLDFLAGS	= -s -static -T kernelld.lds -n  -Map kernel.map --oformat binary #--entry=_start#-Ttext 0x500 target remote localhost:1234

DBGKERNELLDFLAGS	= -static -T kernelld.lds -n  -Map kernel.map #--entry=_start#-Ttext 0x500 target remote localhost:1234

INITSHELLLDFLAGS = -s -static -T app.lds -n  -Map initshellldr.map --oformat binary

